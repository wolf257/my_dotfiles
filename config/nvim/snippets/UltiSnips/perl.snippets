# SHEEBANG ================================================
snippet env "Sheebang simple for perl"
#!/usr/bin/env/ perl

$0
endsnippet

# SHEEBANG ================================================
snippet envW "Sheebang strict for perl"
#!/usr/bin/env/ -w perl
use strict;
use warnings;

$0
endsnippet

####################
# ... #
####################

# FOR ================================================
snippet for "for"
for (my $${1:var} = 0; $$1 < ${2:expression}; $$1++) {
	${3:# body...}
}

endsnippet

# FOREACH ================================================
snippet fore "foreach"
foreach ${1:my $${2:var}} (@${3:array}) {
	${4:# body...}
}

endsnippet

####################
# If / Else / Elif #
####################

snippet if "if"
if ($1) {
	${2:# body...}
}

endsnippet

# IF/ELSE ================================================
snippet ife "Conditional if..else (ife)"
if ($1) {
	${2:# body...}
}
else {
	${3:# else...}
}

endsnippet

# IF/ELSIF/ELSE ================================================
snippet ifee "Conditional if..elsif..else (ifee)"
if ($1) {
	${2:# body...}
}
elsif ($3) {
	${4:# elsif...}
}
else {
	${5:# else...}
}

endsnippet

# UNLESS ================================================
snippet unless "unless"
unless ($1) {
	${2:# body...}
}

endsnippet

# WHILE ================================================
snippet while "while"
while ($1) {
	${2:# body...}
}

endsnippet

# UNTIL ================================================
snippet until "until"
until ($1) {
	${2:# body...}
}

endsnippet

# SUB ================================================
snippet create_sub "Create Function"
sub ${1:functionName} {
    ${2:# body...}
}

endsnippet

# SUB ================================================
snippet open_or_die "Open file or die"
open(${1:HANDLE}, ${2:expression}) or die("${3:message}")

$0
endsnippet

# CLASS ================================================
snippet create_class "class"
package ${1:ClassName};

${2:use parent qw(${3:ParentClass});}${2/.+/\n\n/}sub new {
	my $class = shift;
	$class = ref $class if ref $class;
	my $self = bless {}, $class;
	$self;
}

1;

endsnippet

# vim:ft=snippets:
